/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VentanaAsistencia;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author mycomputer
 */
public class HoraPorDia extends javax.swing.JFrame {

    Modelo.Conexion cc = new Modelo.Conexion();
    Connection cn = cc.getConnection();
    private Modelo.Conexion db = new Modelo.Conexion();
    Statement sent;
    ResultSet conjuntoResultados;
    private Object[][] dtcliente;
    
    /**
     * Creates new form HoraPorDia
     */
    public HoraPorDia() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Horas de entrada y salida");
        cargarComboBox();
        cargarComboBoxSalida();
        LlenarTablaEntrada();
        LlenarTablaSalida();
        TablaEntrada.setRowHeight(1, 30);
        TablaEntrada.getColumnModel().getColumn(0).setMaxWidth(180);
        TablaEntrada.getColumnModel().getColumn(0).setMinWidth(180);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(180);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(0).setMinWidth(180);
        TablaEntrada.getColumnModel().getColumn(1).setMaxWidth(70);
        TablaEntrada.getColumnModel().getColumn(1).setMinWidth(70);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(70);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(1).setMinWidth(70);
        TablaEntrada.getColumnModel().getColumn(2).setMaxWidth(120);
        TablaEntrada.getColumnModel().getColumn(2).setMinWidth(120);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(120);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(2).setMinWidth(120);
        TablaEntrada.getColumnModel().getColumn(3).setMaxWidth(70);
        TablaEntrada.getColumnModel().getColumn(3).setMinWidth(70);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(70);
        TablaEntrada.getTableHeader().getColumnModel().getColumn(3).setMinWidth(70);
        TablaSalida.setRowHeight(1, 30);
        TablaSalida.getColumnModel().getColumn(0).setMaxWidth(200);
        TablaSalida.getColumnModel().getColumn(0).setMinWidth(200);
        TablaSalida.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(200);
        TablaSalida.getTableHeader().getColumnModel().getColumn(0).setMinWidth(200);
        TablaSalida.getColumnModel().getColumn(1).setMaxWidth(100);
        TablaSalida.getColumnModel().getColumn(1).setMinWidth(100);
        TablaSalida.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
        TablaSalida.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);
        TablaSalida.getColumnModel().getColumn(2).setMaxWidth(120);
        TablaSalida.getColumnModel().getColumn(2).setMinWidth(120);
        TablaSalida.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(120);
        TablaSalida.getTableHeader().getColumnModel().getColumn(2).setMinWidth(120);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEntrada = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        diaBuscar = new javax.swing.JComboBox();
        buscFecha = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaSalida = new javax.swing.JTable();
        comboSalida = new javax.swing.JComboBox();
        buscFechaSalida = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Menu = new javax.swing.JMenuBar();
        menuEmpleado = new javax.swing.JMenu();
        verPrincipal = new javax.swing.JMenuItem();
        menuEmpleado1 = new javax.swing.JMenu();
        verEmpleado = new javax.swing.JMenuItem();
        menuHora = new javax.swing.JMenu();
        menuHoraEntrada = new javax.swing.JMenuItem();
        menuHoraSalida = new javax.swing.JMenuItem();
        Nómina = new javax.swing.JMenu();
        GenerarNomina = new javax.swing.JMenuItem();
        Consultar = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        generaReporteEmpleado = new javax.swing.JMenuItem();
        generaReporteHoras = new javax.swing.JMenuItem();
        generaReporteNomina = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TablaEntrada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaEntrada.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TablaEntrada);

        jLabel1.setText("Seleccione una fecha de entrada");

        diaBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaBuscarActionPerformed(evt);
            }
        });

        buscFecha.setText("Buscar");
        buscFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscFechaActionPerformed(evt);
            }
        });

        TablaSalida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaSalida.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TablaSalida);

        comboSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSalidaActionPerformed(evt);
            }
        });

        buscFechaSalida.setText("Buscar");
        buscFechaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscFechaSalidaActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione una fecha de salida");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Lista de hora de entrada");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Lista de hora de entrada");

        menuEmpleado.setText("Inicio");
        menuEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEmpleadoActionPerformed(evt);
            }
        });

        verPrincipal.setText("Ir a ventana de inicio");
        verPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verPrincipalActionPerformed(evt);
            }
        });
        menuEmpleado.add(verPrincipal);

        Menu.add(menuEmpleado);

        menuEmpleado1.setText("Empleado");
        menuEmpleado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEmpleado1ActionPerformed(evt);
            }
        });

        verEmpleado.setText("Ir a ventana de empleados");
        verEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verEmpleadoActionPerformed(evt);
            }
        });
        menuEmpleado1.add(verEmpleado);

        Menu.add(menuEmpleado1);

        menuHora.setText("Hora");

        menuHoraEntrada.setText("Registrar hora de entrada");
        menuHoraEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHoraEntradaActionPerformed(evt);
            }
        });
        menuHora.add(menuHoraEntrada);

        menuHoraSalida.setText("Registrar hora de salida");
        menuHoraSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHoraSalidaActionPerformed(evt);
            }
        });
        menuHora.add(menuHoraSalida);

        Menu.add(menuHora);

        Nómina.setText("Nómina");

        GenerarNomina.setText("Generar nómina");
        GenerarNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarNominaActionPerformed(evt);
            }
        });
        Nómina.add(GenerarNomina);

        Consultar.setText("Consultar nómina por empleado");
        Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarActionPerformed(evt);
            }
        });
        Nómina.add(Consultar);

        Menu.add(Nómina);

        jMenu1.setText("Reportes");

        generaReporteEmpleado.setText("Generar reporte de los empleados");
        generaReporteEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaReporteEmpleadoActionPerformed(evt);
            }
        });
        jMenu1.add(generaReporteEmpleado);

        generaReporteHoras.setText("Generar reporte de horas de entrada y salida");
        generaReporteHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaReporteHorasActionPerformed(evt);
            }
        });
        jMenu1.add(generaReporteHoras);

        generaReporteNomina.setText("Generar reporte de nómina");
        generaReporteNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaReporteNominaActionPerformed(evt);
            }
        });
        jMenu1.add(generaReporteNomina);

        Menu.add(jMenu1);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscFecha)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscFechaSalida)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(193, 193, 193))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(comboSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buscFechaSalida))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(diaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buscFecha)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LlenarTablaEntrada(){
        //actualiza los datos de la tabla realizando una consulta a la base de datos
        String[] columNames = {"Nombre","Día","Fecha","Hora","Retardo","Falta"};        
        dtcliente = db.SelectEntrada();
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtcliente,columNames);
        TablaEntrada.setRowHeight(30);
        TablaEntrada.setModel(datos);
    }   
    
    private void LlenarTablaSalida(){
        //actualiza los datos de la tabla realizando una consulta a la base de datos
        String[] columNames = {"Nombre","Día","Fecha","Hora"};        
        dtcliente = db.SelectSalida();
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtcliente,columNames);
        TablaSalida.setRowHeight(30);
        TablaSalida.setModel(datos);
    }

    public ArrayList<Hora> obtenerListaEntrada(){
        try {
            String query = "select distinct fechaDays from entrada";
            Statement stat = cn.createStatement();
            conjuntoResultados = stat.executeQuery(query);
            ArrayList<Hora> info = new ArrayList<Hora>();
            if(conjuntoResultados.next()){
                do{
                    Hora listaTemporal = new Hora (conjuntoResultados.getString(1));
                    info.add(listaTemporal);
                } while (conjuntoResultados.next());
                return info;
            }else{
                return null;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
            return null;
        }
    }
    
    private void cargarComboBox(){
        ArrayList<Hora> lista = obtenerListaEntrada();
        for(int x=0; x<lista.size(); x++){
            Hora obj = new Hora(lista.get(x).getFechaDays());
            diaBuscar.addItem(obj);
        }
    }   
    
    public ArrayList<Hora> obtenerListaSalida(){
        try {
            String query = "select distinct fechaDays from salida";
            Statement stat = cn.createStatement();
            conjuntoResultados = stat.executeQuery(query);
            ArrayList<Hora> info = new ArrayList<Hora>();
            if(conjuntoResultados.next()){
                do{
                    Hora listaTemporal = new Hora (conjuntoResultados.getString(1));
                    info.add(listaTemporal);
                } while (conjuntoResultados.next());
                return info;
            }else{
                return null;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
            return null;
        }
    }
    
    private void cargarComboBoxSalida(){
        ArrayList<Hora> lista = obtenerListaSalida();
        for(int x=0; x<lista.size(); x++){
            Hora obj = new Hora(lista.get(x).getFechaDays());
            comboSalida.addItem(obj);
        }
    }   
    
    private void verPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verPrincipalActionPerformed
        // TODO add your handling code here:
        VentanaAsistencia.Principal obj = new VentanaAsistencia.Principal();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_verPrincipalActionPerformed

    private void menuEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuEmpleadoActionPerformed

    private void menuHoraEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHoraEntradaActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.AltaHoraEntrada obj = new VentanaAsistencia.AltaHoraEntrada();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
    }//GEN-LAST:event_menuHoraEntradaActionPerformed

    private void menuHoraSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHoraSalidaActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.AltaHoraSalida obj = new VentanaAsistencia.AltaHoraSalida();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
    }//GEN-LAST:event_menuHoraSalidaActionPerformed

    private void diaBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaBuscarActionPerformed

    private void buscFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscFechaActionPerformed
        // TODO add your handling code here:
        String fechaEntrada = diaBuscar.getSelectedItem().toString();
        cc.ConsultaFechaEntrada(fechaEntrada, TablaEntrada);
    }//GEN-LAST:event_buscFechaActionPerformed

    private void verEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verEmpleadoActionPerformed
        // TODO add your handling code here:
        VentanaAsistencia.ConsultaEmpleado obj = new VentanaAsistencia.ConsultaEmpleado();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_verEmpleadoActionPerformed

    private void menuEmpleado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEmpleado1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuEmpleado1ActionPerformed

    private void GenerarNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarNominaActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.GeneraNomina obj = new VentanaAsistencia.GeneraNomina();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
    }//GEN-LAST:event_GenerarNominaActionPerformed

    private void comboSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSalidaActionPerformed

    private void buscFechaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscFechaSalidaActionPerformed
        // TODO add your handling code here:
        String fechaSalida = comboSalida.getSelectedItem().toString();
        cc.ConsultaFechaSalida(fechaSalida, TablaSalida);
    }//GEN-LAST:event_buscFechaSalidaActionPerformed

    private void ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.ConsultaNomina obj = new VentanaAsistencia.ConsultaNomina();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
    }//GEN-LAST:event_ConsultarActionPerformed

    private void generaReporteEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaReporteEmpleadoActionPerformed
        // TODO add your handling code here:
        Modelo.Conexion cc = new Modelo.Conexion();
        String path = "C://Users/mycomputer/Documents/NetBeansProjects/Asistencias/src/Reportes/reporteEmpleado.jasper";
        JasperReport jr = null;
        try {
            jr = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, cc.getConnection());
            JasperViewer jv = new JasperViewer(jp,false);
            jv.setVisible(true);
            jv.setTitle("Reporte de empleados");

        } catch (JRException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generaReporteEmpleadoActionPerformed

    private void generaReporteHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaReporteHorasActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.BuscarNombre obj = new VentanaAsistencia.BuscarNombre();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
        
    }//GEN-LAST:event_generaReporteHorasActionPerformed

    private void generaReporteNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaReporteNominaActionPerformed
        // TODO add your handling code here:
        try{
            VentanaAsistencia.BuscarNomina obj = new VentanaAsistencia.BuscarNomina();
            obj.setVisible(true);
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Primero debe registrar un empleado");
            JOptionPane.showMessageDialog(this, "Error: Base de datos vacía");
        }
    }//GEN-LAST:event_generaReporteNominaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoraPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoraPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoraPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoraPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoraPorDia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Consultar;
    private javax.swing.JMenuItem GenerarNomina;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenu Nómina;
    private javax.swing.JTable TablaEntrada;
    private javax.swing.JTable TablaSalida;
    private javax.swing.JButton buscFecha;
    private javax.swing.JButton buscFechaSalida;
    private javax.swing.JComboBox comboSalida;
    private javax.swing.JComboBox diaBuscar;
    private javax.swing.JMenuItem generaReporteEmpleado;
    private javax.swing.JMenuItem generaReporteHoras;
    private javax.swing.JMenuItem generaReporteNomina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menuEmpleado;
    private javax.swing.JMenu menuEmpleado1;
    private javax.swing.JMenu menuHora;
    private javax.swing.JMenuItem menuHoraEntrada;
    private javax.swing.JMenuItem menuHoraSalida;
    private javax.swing.JMenuItem verEmpleado;
    private javax.swing.JMenuItem verPrincipal;
    // End of variables declaration//GEN-END:variables
}
